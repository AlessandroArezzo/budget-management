<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com</groupId>
  <artifactId>budget-management</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>budget-management</name>
  
  <properties>
 	<!-- Java version: Java 8 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Dependencies version -->
    <cucumber.version>4.2.2</cucumber.version>
    <junit.version>4.13</junit.version>
    <mockito.version>3.3.3</mockito.version>
    <assertj-swing.version>3.9.2</assertj-swing.version>
    <testcontainers.version>1.14.3</testcontainers.version>
    <logback-classic.version>1.2.3</logback-classic.version>
    <mongo-java-driver.version>3.12.5</mongo-java-driver.version>
    <mongo-java-server.version>1.29.1</mongo-java-server.version>
    
    <!-- Plugin version -->
    <sonarqube.version>3.7.0.1746</sonarqube.version>
    <jacoco.version>0.8.5</jacoco.version>
    <coveralls.version>4.3.0</coveralls.version>
    <pittest.version>1.4.10</pittest.version>
    
    <sonar.coverage.exclusions>
   		**/model/*.*,
   		**/app/swing/*.*,
   		**/repository/mongodb/RepositoryMongoFactory.java
   	</sonar.coverage.exclusions>
   	
   	<sonar.issue.ignore.multicriteria>e1 , e2, e3, e4 </sonar.issue.ignore.multicriteria>
   	<!--Disable rule for "Boolean expressions should not be gratuitous" in 
   	classes ClientMongoRepository and InvoiceMongoRepository -->
   	<sonar.issue.ignore.multicriteria.e1.ruleKey>
		java:S2589
	</sonar.issue.ignore.multicriteria.e1.ruleKey>
	<sonar.issue.ignore.multicriteria.e1.resourceKey>
		**/ClientMongoRepository.java,
		**/InvoiceMongoRepository.java
	</sonar.issue.ignore.multicriteria.e1.resourceKey>
	 <!--Disable rule for "Inheritance tree of classes should no be to deep" 
	 and "Local variable and method parameter names should comply with a naming convention" 
	in BalanceSwingView-->
    <sonar.issue.ignore.multicriteria.e2.ruleKey>
		java:S110,
		java:S116,
		java:S117
	</sonar.issue.ignore.multicriteria.e2.ruleKey>
	<sonar.issue.ignore.multicriteria.e2.resourceKey>
		**/BalanceSwingView.java
	</sonar.issue.ignore.multicriteria.e2.resourceKey>
	<!--Disable rule for "Tests should include assertions" in BalanceSwingViewTest-->
	<sonar.issue.ignore.multicriteria.e3.ruleKey>
		java:S2699
	</sonar.issue.ignore.multicriteria.e3.ruleKey>
	<sonar.issue.ignore.multicriteria.e3.resourceKey>
		**/BalanceSwingViewTest.java
	</sonar.issue.ignore.multicriteria.e3.resourceKey>
	<!--Disable rule for "Anonymous inner classes containing only one method should become lambdas"
	 in TransactionMongoManager-->
	<sonar.issue.ignore.multicriteria.e4.ruleKey>
		squid:S1604
	</sonar.issue.ignore.multicriteria.e4.ruleKey>
	<sonar.issue.ignore.multicriteria.e4.resourceKey>
		**/TransactionMongoManager.java
	</sonar.issue.ignore.multicriteria.e4.resourceKey>
  </properties>
  
  
  <dependencies>
 		<dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>${junit.version}</version>
	      <scope>test</scope>
	    </dependency>
	  		<dependency>
			<groupId>org.assertj</groupId> 
			<artifactId>assertj-swing-junit</artifactId> 
			<version>${assertj-swing.version}</version> 
			<scope>test</scope>
		</dependency>
		<dependency>
		  	<groupId>org.mockito</groupId>
		  	<artifactId>mockito-core</artifactId>
		  	<version>${mockito.version}</version>
		  	<scope>test</scope>
		 </dependency>
	  	<dependency>
			<groupId>io.cucumber</groupId> 
			<artifactId>cucumber-java</artifactId> 
			<version>${cucumber.version}</version> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId> 
			<artifactId>cucumber-junit</artifactId> 
			<version>${cucumber.version}</version> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId> 
			<artifactId>testcontainers</artifactId> 
			<version>${testcontainers.version}</version> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId> 
			<artifactId>logback-classic</artifactId> 
			<version>${logback-classic.version}</version>
		</dependency>
		<dependency>
	    	  <groupId>de.bwaldvogel</groupId>
		      <artifactId>mongo-java-server</artifactId>
		      <version>${mongo-java-server.version}</version>
		      <scope>test</scope>
	    </dependency>
	    <dependency>
			<groupId>org.mongodb</groupId> 
			<artifactId>mongo-java-driver</artifactId> 
			<version>${mongo-java-driver.version}</version>
		</dependency>
	</dependencies>
	
	<build>
	  	<plugins>
		  	<plugin> 
		  		<groupId>org.apache.maven.plugins</groupId> 
		  		<artifactId>maven-failsafe-plugin</artifactId> 
		  		<version>2.22.1</version>
			<executions>
			    <execution>
			      <id>default-it</id>
			      <goals>
					<goal>integration-test</goal>
					<goal>verify</goal> 
				   </goals>
			    </execution>
			    <execution>
		    		<id>bdd-tests</id>
			    	<goals>
						<goal>integration-test</goal>
						<goal>verify</goal> 
				   </goals>
				   <configuration>
				   	<excludes>
				   		<exclude>**/*IT.java</exclude>
				   	</excludes>
				   	<includes>
				   		<include>**/*BDD.java</include>
				   	</includes>
				   </configuration>
			    </execution>
			  </executions>
			</plugin>
			
		    <plugin>
			  <groupId>org.codehaus.mojo</groupId> 
				<artifactId>build-helper-maven-plugin</artifactId> 
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id> 
						<phase>generate-test-sources</phase> 
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources> 
								<source>src/it/java</source>
								<source>src/bdd/java</source>
					        </sources>
				        </configuration>
			    	</execution>
			 	 	<execution>
						<id>add-test-resource</id> 
						<phase>generate-test-resources</phase> 
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources> 
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
					        </resources>
				        </configuration>
			    	</execution>
			 	 </executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
		  	<plugins>
		  		<plugin>
		  			<groupId>org.sonarsource.scanner.maven</groupId>
		  			<artifactId>sonar-maven-plugin</artifactId>
		  			<version>${sonarqube.version}</version>
		  		</plugin>
	  			<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>**/model/*.*</exclude>
							<exclude>**/app/swing/*.*</exclude>
							<exclude>**/repository/mongodb/RepositoryMongoFactory.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>	  		
		  		<plugin>
					<groupId>org.eluder.coveralls</groupId>
					 <artifactId>coveralls-maven-plugin</artifactId> 
					 <version>${coveralls.version}</version>
	      		</plugin>
	      		<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pittest.version}</version>
				<configuration>
					 <excludedClasses>
			            <param>com.balance.model.*</param>
			            <param>com.balance.app.swing.*</param>
			            <param>com.balance.view.swing.*</param>
			            <param>com.balance.repository.mongodb.RepositoryMongoFactory</param>
			        </excludedClasses>
			         <targetTests>
			            <param>com.balance.*</param>
			        </targetTests>
			        <excludedTestClasses>
		              <param>com.balance.view.swing.*</param>
		            </excludedTestClasses>
					<mutators>
						<mutator>DEFAULTS</mutator> 
					</mutators>
					<mutationThreshold>100</mutationThreshold>
				</configuration>
			</plugin>
      		</plugins>
     	</pluginManagement>
	</build>
	
	<profiles>
		  <profile>
			<id>jacoco</id> 
			<build>
		        <plugins>
		        	<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId> 
					</plugin>
		      	</plugins>
		   	</build>
		  </profile>
		  <profile>
	  	<id>mutation-testing</id> 
		<build>
	        <plugins>
	        	<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId> 
					<executions>
						<execution>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
							<phase>verify</phase>
						</execution>
					</executions>
				</plugin>
	      	</plugins>
	   	</build>
	  </profile>
	 </profiles>
</project>